// Generated by CoffeeScript 1.4.0
(function() {
  var config_object, do_clean, do_export, start_export, syspath, sysutil, utils;

  syspath = require('path');

  sysutil = require('util');

  utils = require('../util');

  exports.usage = "文件首行添加 '/* [export] */' 或 '/* [export no_version] */'\n\t\t\t将被自动添加 fekit.config 'export' 列表中";

  config_object = {};

  do_clean = function(dir) {
    var exists, i, nu, _i, _len, _ref;
    nu = [];
    exists = function(path) {
      if (path.path != null) {
        path = path.path;
      }
      return utils.path.exists(utils.path.join(dir, path));
    };
    if (sysutil.isArray(config_object["export"])) {
      _ref = config_object["export"];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        i = _ref[_i];
        if (exists(i)) {
          nu.push(i);
        }
      }
    }
    return config_object["export"] = nu;
  };

  start_export = function(dir) {
    return utils.path.each_directory(dir, function(file) {
      var ext;
      if (utils.path.is_directory(file)) {
        start_export(file, dir);
        return null;
      }
      ext = syspath.extname(file);
      if (ext === ".js" || ext === ".css") {
        return do_export(file, dir);
      }
    }, true);
  };

  do_export = function(file, dir) {
    var content, i, index, item, j, line, lines, re, reader, result, _ref;
    reader = new utils.file.reader();
    content = reader.read(file);
    file = syspath.relative(dir, file);
    lines = content.split("\n");
    line = lines[0] || "";
    line = line.trim();
    re = /^\/\*\s*\[export(?: (no_version))?\]\s*\*\/$/;
    result = line.match(re);
    if (syspath.sep === '\\') {
      file = file.replace(/\\/g, '/');
    }
    if (result != null) {
      index = config_object["export"].indexOf(file);
      if (index < 0) {
        index = null;
        _ref = config_object["export"];
        for (i in _ref) {
          j = _ref[i];
          if (j.path === file) {
            index = i;
          }
        }
      }
      item = {
        path: file,
        no_version: result[1] === 'no_version'
      };
      if (index != null) {
        if (config_object["export"][index]['path'] != null) {
          return config_object["export"][index]['no_version'] = item.no_version;
        } else {
          return config_object["export"][index] = item;
        }
      } else {
        return config_object["export"].push(item);
      }
    }
  };

  exports.run = function(options) {
    var base, config_file, dir, reader, str, writer;
    base = options.cwd;
    dir = options._[1] || 'src';
    dir = utils.path.join(base, dir);
    config_file = utils.path.join(base, 'fekit.config');
    reader = new utils.file.reader();
    try {
      config_object = reader.readJSON(config_file);
    } catch (err) {
      return utils.logger.error(err);
    }
    do_clean(dir);
    start_export(dir);
    str = JSON.stringify(config_object, null, 4);
    writer = new utils.file.writer();
    writer.write(config_file, str);
    return utils.logger.log("'fekit.config' 写入完成");
  };

}).call(this);
