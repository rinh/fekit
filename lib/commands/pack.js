// Generated by CoffeeScript 1.7.1
(function() {
  var compiler, syspath, utils;

  compiler = require("../compiler/compiler");

  utils = require("../util");

  syspath = require("path");

  exports.usage = "合并项目文件";

  exports.set_options = function(optimist) {
    return optimist;
  };

  exports.run = function(options) {
    var conf, done, iter, script_global;
    script_global = {
      EXPORT_LIST: [],
      EXPORT_MAP: {}
    };
    conf = utils.config.parse(options.cwd);
    iter = function(srcpath, parents, opts, doneCallback) {
      var dest, urlconvert, _done;
      utils.logger.log("正在处理 " + srcpath);
      urlconvert = new utils.UrlConvert(srcpath, options.cwd);
      if (opts.no_version) {
        urlconvert.set_no_version();
      }
      urlconvert.set_extname_type(compiler.getContentType(srcpath));
      dest = urlconvert.to_dev();
      _done = function(err, source) {
        if (err) {
          utils.logger.error(err.toString());
          utils.exit(1);
          return;
        }
        new utils.file.writer().write(dest, source);
        utils.logger.log("已经处理 " + srcpath + "  ==> " + dest);
        return doneCallback();
      };
      return compiler.compile(srcpath, {
        dependencies_filepath_list: parents
      }, _done);
    };
    done = function() {
      conf.doScript("postpack", script_global);
      return utils.logger.log("DONE.");
    };
    conf.each_export_files(function(srcpath, parents, opts) {
      var item;
      item = {
        url: srcpath,
        path: syspath.join("src", opts.partial_path)
      };
      script_global.EXPORT_MAP[opts.partial_path] = item;
      return script_global.EXPORT_LIST.push(item);
    });
    conf.doScript("prepack", script_global);
    return conf.each_export_files_async(iter, done);
  };

}).call(this);
