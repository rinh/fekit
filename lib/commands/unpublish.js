// Generated by CoffeeScript 1.7.1
(function() {
  var async, env, prompt, request, semver, utils, _;

  prompt = require('prompt');

  env = require('../env');

  request = require('request');

  utils = require('../util');

  _ = require('underscore');

  async = require('async');

  semver = require('semver');

  exports.usage = "取消发布特定的组件包";

  exports.set_options = function(optimist) {
    return optimist.usage('unpublish name[@version]');
  };

  exports.run = function(options) {
    var name, prop, spec_pkg, version;
    spec_pkg = options['_'][1];
    if (!spec_pkg) {
      return utils.logger.error('请指定要取消发布的包及版本号.');
    }
    name = spec_pkg.split('@')[0];
    version = spec_pkg.split('@')[1];
    if (!version || !semver.valid(version)) {
      return utils.logger.error('请指定正确的版本号.');
    }
    prompt.start();
    prop = {
      properties: {
        ensure: {
          description: 'which version u want to unpublish? ',
          pattern: new RegExp("^" + version.replace(/\./g, '\\.') + "$", "i")
        }
      }
    };
    return prompt.get(prop, function(err, result) {
      var url;
      if (version !== result.ensure) {
        return;
      }
      url = env.getPackageUrl(name, version);
      return env.authenticate(function(err) {
        if (err) {
          return utils.logger.error(err);
        }
        return utils.http.del(url, {
          username: env.get('user'),
          password_md5: env.getUserPasspharse()
        }, function(err, res, body) {
          var data;
          data = JSON.parse(body);
          if (!data.ret) {
            return utils.logger.error(data.errmsg);
          }
          return utils.logger.log("" + name + " @ " + (version || "all") + " 删除成功");
        });
      });
    });
  };

}).call(this);
