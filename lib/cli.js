// Generated by CoffeeScript 1.7.1
(function() {
  var CURR, command_help, command_run, each_commands, env, find_cmd, fixempty, help_title, init_options, optimist, sysfs, syspath, utils;

  optimist = require("optimist");

  sysfs = require("fs");

  syspath = require("path");

  utils = require("./util");

  env = require("./env");

  CURR = syspath.dirname(__filename);

  each_commands = function(cb) {
    var cmddir, command, f, fullpath, list, _i, _len, _results;
    cmddir = syspath.join(CURR, "commands");
    list = sysfs.readdirSync(cmddir);
    list = list.concat(env.getExtensions());
    _results = [];
    for (_i = 0, _len = list.length; _i < _len; _i++) {
      f = list[_i];
      if (typeof f === 'string') {
        if (f !== "." || f !== "..") {
          fullpath = syspath.resolve(cmddir, f);
          if (utils.path.is_directory(fullpath)) {
            continue;
          }
          command = utils.path.fname(fullpath);
          _results.push(cb(command, require(fullpath)));
        } else {
          _results.push(void 0);
        }
      } else if (f.name && f.path) {
        _results.push(cb("" + f.name + "(" + f.version + ")", require(f.path)));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  fixempty = function(str, limit) {
    var i, n;
    n = limit - str.length;
    if (n < 0) {
      n = 0;
    }
    return str + ((function() {
      var _i, _results;
      _results = [];
      for (i = _i = 0; 0 <= n ? _i <= n : _i >= n; i = 0 <= n ? ++_i : --_i) {
        _results.push(" ");
      }
      return _results;
    })()).join('');
  };

  help_title = function() {
    console.info("");
    console.info("===================== FEKIT " + utils.version + " ====================");
    return console.info("");
  };

  init_options = function(command) {
    var cwd, opt, options;
    if (command.set_options) {
      opt = command.set_options(optimist);
    } else {
      opt = optimist;
    }
    opt.alias('h', 'help');
    opt.describe('h', '查看帮助');
    options = opt.argv;
    utils.logger.setup(options);
    cwd = process.cwd();
    options.cwd = cwd;
    return options;
  };

  command_run = function(cmdname, cmd, options) {
    return cmd.run(options);
  };

  command_help = function(cmdname, cmd, options) {
    help_title();
    console.info("命令: " + cmdname + " ");
    console.info("功能: " + cmd.usage + " ");
    console.info("");
    return optimist.showHelp();
  };

  exports.help = function() {
    help_title();
    each_commands((function(_this) {
      return function(name, cmd) {
        return console.info(" " + (fixempty(name, 15)) + " # " + (cmd.usage || ''));
      };
    })(this));
    console.info("");
    console.info(" 如果需要帮助, 请使用 fekit {命令名} --help ");
    return console.info("");
  };

  find_cmd = function(cmd) {
    var i, lib, list, path, _i, _len;
    lib = syspath.dirname(__filename);
    path = syspath.join(lib, "./commands/" + cmd + ".js");
    if (utils.path.exists(path)) {
      return path;
    }
    list = env.getExtensions();
    for (_i = 0, _len = list.length; _i < _len; _i++) {
      i = list[_i];
      if (i.name === cmd) {
        return i.path;
      }
    }
    return null;
  };

  exports.run = function(cmd) {
    var command, err, options, path;
    path = find_cmd(cmd);
    if (!path) {
      utils.logger.error("请确认是否有 " + cmd + " 这个命令");
      return 1;
    }
    utils.logger.trace("加载命令 " + path);
    try {
      command = require(path);
      options = init_options(command);
      if (options.help) {
        return command_help(cmd, command, options);
      } else {
        return command_run(cmd, command, options);
      }
    } catch (_error) {
      err = _error;
      if (utils.logger.debug === true) {
        throw err;
      } else {
        if (typeof err === 'object') {
          err = JSON.stringify(err);
        }
        utils.logger.error(err);
        return 1;
      }
    }
  };

}).call(this);
