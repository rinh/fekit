// Generated by CoffeeScript 1.4.0
(function() {
  var COMPILED_CACHED, COMPILED_CACHED_DEPEND, MODULES, fs, md5, utils, watch;

  utils = require('../../util');

  md5 = require('MD5');

  fs = require('fs');

  MODULES = {};

  COMPILED_CACHED = {};

  COMPILED_CACHED_DEPEND = {};

  watch = exports.watch = function(module) {
    var filepath, key, m, _i, _len, _ref, _results;
    filepath = module.path.uri;
    key = module.path.uri + "__" + module.root_module.path.uri;
    if (MODULES[key]) {
      return;
    }
    MODULES[key] = module;
    module.cleanCache = function() {
      utils.logger.trace("缓存失效 " + this.path.uri);
      delete COMPILED_CACHED[this.path.uri];
      delete COMPILED_CACHED_DEPEND[this.path.uri];
      if (this.parent) {
        return this.parent.cleanCache();
      }
    };
    fs.watchFile(filepath, function() {
      return module.emit('change');
    });
    module.on('change', function() {
      return this.cleanCache();
    });
    _ref = module.depends;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      m = _ref[_i];
      _results.push(watch(m));
    }
    return _results;
  };

  exports.get_compiled_cache = function(filename, is_deps) {
    utils.logger.trace("获取缓存 " + filename);
    if (is_deps) {
      return COMPILED_CACHED_DEPEND[filename];
    } else {
      return COMPILED_CACHED[filename];
    }
  };

  exports.set_compiled_cache = function(filename, source, is_deps) {
    utils.logger.trace("增加缓存 " + filename);
    if (is_deps) {
      return COMPILED_CACHED_DEPEND[filename] = source;
    } else {
      return COMPILED_CACHED[filename] = source;
    }
  };

}).call(this);
